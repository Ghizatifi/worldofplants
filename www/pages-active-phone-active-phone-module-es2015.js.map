{"version":3,"sources":["./node_modules/@ionic-native/onesignal/ngx/index.js","./src/app/pages/active-phone/active-phone.page.html","./src/app/pages/active-phone/active-phone.module.ts","./src/app/pages/active-phone/active-phone.page.scss","./src/app/pages/active-phone/active-phone.page.ts"],"names":[],"mappings":"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","file":"pages-active-phone-active-phone-module-es2015.js","sourcesContent":["import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\n/**\n * **ANDROID** - Privacy setting for how the notification should be shown on the lockscreen of Android 5+ devices.\n */\nexport var OSLockScreenVisibility;\n(function (OSLockScreenVisibility) {\n    /**\n     * Fully visible (default)\n     */\n    OSLockScreenVisibility[OSLockScreenVisibility[\"Public\"] = 1] = \"Public\";\n    /**\n     * Contents are hidden\n     */\n    OSLockScreenVisibility[OSLockScreenVisibility[\"Private\"] = 0] = \"Private\";\n    /**\n     * Not shown\n     */\n    OSLockScreenVisibility[OSLockScreenVisibility[\"Secret\"] = -1] = \"Secret\";\n})(OSLockScreenVisibility || (OSLockScreenVisibility = {}));\n/**\n * How the notification was displayed to the user. Part of OSNotification. See inFocusDisplaying for more information on how this is used.\n */\nexport var OSDisplayType;\n(function (OSDisplayType) {\n    /**\n     * notification is silent, or inFocusDisplaying is disabled.\n     */\n    OSDisplayType[OSDisplayType[\"None\"] = 0] = \"None\";\n    /**\n     * (**DEFAULT**) - native alert dialog display.\n     */\n    OSDisplayType[OSDisplayType[\"InAppAlert\"] = 1] = \"InAppAlert\";\n    /**\n     * native notification display.\n     */\n    OSDisplayType[OSDisplayType[\"Notification\"] = 2] = \"Notification\";\n})(OSDisplayType || (OSDisplayType = {}));\nexport var OSActionType;\n(function (OSActionType) {\n    OSActionType[OSActionType[\"Opened\"] = 0] = \"Opened\";\n    OSActionType[OSActionType[\"ActionTake\"] = 1] = \"ActionTake\";\n})(OSActionType || (OSActionType = {}));\nvar OneSignal = /** @class */ (function (_super) {\n    __extends(OneSignal, _super);\n    function OneSignal() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * constants to use in inFocusDisplaying()\n         * @hidden\n         */\n        _this.OSInFocusDisplayOption = {\n            None: 0,\n            InAppAlert: 1,\n            Notification: 2,\n        };\n        return _this;\n    }\n    OneSignal.prototype.startInit = function (appId, googleProjectNumber) { return cordova(this, \"startInit\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.handleNotificationReceived = function () { return cordova(this, \"handleNotificationReceived\", { \"observable\": true }, arguments); };\n    OneSignal.prototype.handleNotificationOpened = function () { return cordova(this, \"handleNotificationOpened\", { \"observable\": true }, arguments); };\n    OneSignal.prototype.handleInAppMessageClicked = function () { return cordova(this, \"handleInAppMessageClicked\", { \"observable\": true }, arguments); };\n    OneSignal.prototype.iOSSettings = function (settings) { return cordova(this, \"iOSSettings\", { \"sync\": true, \"platforms\": [\"iOS\"] }, arguments); };\n    OneSignal.prototype.endInit = function () { return cordova(this, \"endInit\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.promptForPushNotificationsWithUserResponse = function () { return cordova(this, \"promptForPushNotificationsWithUserResponse\", { \"platforms\": [\"iOS\"] }, arguments); };\n    OneSignal.prototype.getTags = function () { return cordova(this, \"getTags\", {}, arguments); };\n    OneSignal.prototype.getIds = function () { return cordova(this, \"getIds\", {}, arguments); };\n    OneSignal.prototype.sendTag = function (key, value) { return cordova(this, \"sendTag\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.sendTags = function (json) { return cordova(this, \"sendTags\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.deleteTag = function (key) { return cordova(this, \"deleteTag\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.deleteTags = function (keys) { return cordova(this, \"deleteTags\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.registerForPushNotifications = function () { return cordova(this, \"registerForPushNotifications\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.enableVibrate = function (enable) { return cordova(this, \"enableVibrate\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.enableSound = function (enable) { return cordova(this, \"enableSound\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.inFocusDisplaying = function (displayOption) { return cordova(this, \"inFocusDisplaying\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.setSubscription = function (enable) { return cordova(this, \"setSubscription\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.getPermissionSubscriptionState = function () { return cordova(this, \"getPermissionSubscriptionState\", {}, arguments); };\n    OneSignal.prototype.postNotification = function (notificationObj) { return cordova(this, \"postNotification\", {}, arguments); };\n    OneSignal.prototype.cancelNotification = function (notificationId) { return cordova(this, \"cancelNotification\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.promptLocation = function () { return cordova(this, \"promptLocation\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.syncHashedEmail = function (email) { return cordova(this, \"syncHashedEmail\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.setLogLevel = function (logLevel) { return cordova(this, \"setLogLevel\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.setLocationShared = function (shared) { return cordova(this, \"setLocationShared\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.addPermissionObserver = function () { return cordova(this, \"addPermissionObserver\", { \"observable\": true }, arguments); };\n    OneSignal.prototype.addSubscriptionObserver = function () { return cordova(this, \"addSubscriptionObserver\", { \"observable\": true }, arguments); };\n    OneSignal.prototype.setEmail = function (email, emailAuthToken) { return cordova(this, \"setEmail\", {}, arguments); };\n    OneSignal.prototype.logoutEmail = function () { return cordova(this, \"logoutEmail\", {}, arguments); };\n    OneSignal.prototype.addEmailSubscriptionObserver = function () { return cordova(this, \"addEmailSubscriptionObserver\", { \"observable\": true }, arguments); };\n    OneSignal.prototype.clearOneSignalNotifications = function () { return cordova(this, \"clearOneSignalNotifications\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.setRequiresUserPrivacyConsent = function (required) { return cordova(this, \"setRequiresUserPrivacyConsent\", {}, arguments); };\n    OneSignal.prototype.provideUserConsent = function (granted) { return cordova(this, \"provideUserConsent\", {}, arguments); };\n    OneSignal.prototype.userProvidedPrivacyConsent = function (callback) { return cordova(this, \"userProvidedPrivacyConsent\", {}, arguments); };\n    OneSignal.prototype.setExternalUserId = function (externalId) { return cordova(this, \"setExternalUserId\", {}, arguments); };\n    OneSignal.prototype.removeExternalUserId = function () { return cordova(this, \"removeExternalUserId\", {}, arguments); };\n    OneSignal.prototype.addTrigger = function (key, value) { return cordova(this, \"addTrigger\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.addTriggers = function (triggers) { return cordova(this, \"addTriggers\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.removeTriggerForKey = function (key) { return cordova(this, \"removeTriggerForKey\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.removeTriggersForKeys = function (keys) { return cordova(this, \"removeTriggersForKeys\", { \"sync\": true }, arguments); };\n    OneSignal.prototype.getTriggerValueForKey = function (key) { return cordova(this, \"getTriggerValueForKey\", {}, arguments); };\n    OneSignal.prototype.pauseInAppMessages = function (pause) { return cordova(this, \"pauseInAppMessages\", { \"sync\": true }, arguments); };\n    OneSignal.pluginName = \"OneSignal\";\n    OneSignal.plugin = \"onesignal-cordova-plugin\";\n    OneSignal.pluginRef = \"plugins.OneSignal\";\n    OneSignal.repo = \"https://github.com/OneSignal/OneSignal-Cordova-SDK\";\n    OneSignal.platforms = [\"Amazon Fire OS\", \"Android\", \"iOS\", \"Windows\"];\n    OneSignal.decorators = [\n        { type: Injectable }\n    ];\n    return OneSignal;\n}(IonicNativePlugin));\nexport { OneSignal };\n//# sourceMappingURL=data:application/json;base64,","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"logOut()\\\" style=\\\"color:black;\\\">\\n        <ion-icon name=\\\"ios-arrow-back\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <!-- <ion-title>تأكيد رقم الهاتف</ion-title> -->\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"container\\\">\\n    <h1>\\n      تأكيد رقم الهاتف\\n    </h1>\\n    <p class=\\\"header\\\">\\n      تم ارسال كود التفعيل للرقم : \\n      <span dir=\\\"ltr\\\">+962{{phone}}</span>\\n      يرجى ادخاله في المربع\\n    </p>\\n    <!-- <p class=\\\"title\\\" dir=\\\"ltr\\\">\\n      +961{{phone}} \\n    </p> -->\\n\\n    <ion-item>\\n      <ion-input \\n      [(ngModel)]=\\\"code\\\" \\n      type=\\\"number\\\" \\n      placeholder=\\\"XXXXXX\\\"\\n      maxlength=\\\"6\\\"\\n      (ionChange)=\\\"log($event)\\\"\\n      ></ion-input>\\n    </ion-item>\\n    <!-- <p class=\\\"msg\\\">\\n      أدخل الرمز المكون من 6 أرقام\\n    </p> -->\\n    <p class=\\\"resend\\\" *ngIf=\\\"time > 0\\\">\\n      يمكنك إعادة المحاولة مجدداً خلال {{timerText}} دقيقة\\n    </p>\\n    <p class=\\\"resend\\\" *ngIf=\\\"time == 0\\\">\\n      <ion-button class=\\\"resend-btn\\\" (click)=\\\"resendCode()\\\">إرسال الكود مرة أخرى؟</ion-button>\\n    </p>\\n\\n    <!-- <ion-button class=\\\"send-btn\\\" [disabled]=\\\"!code || code.toString().length != 6 || loading\\\" (click)=\\\"activeAccount()\\\">\\n      <ion-spinner *ngIf=\\\"loading\\\"></ion-spinner>\\n      {{\\n        loading ?\\n        \\\"\\\"\\n        :\\n        'تأكيد'\\n      }}\\n    </ion-button> -->\\n  </div>\\n</ion-content>\\n\\n<ion-footer>\\n  <ion-toolbar>\\n    <ion-button class=\\\"send-btn\\\" [disabled]=\\\"!code || code.toString().length != 6 || loading\\\" (click)=\\\"activeAccount()\\\">\\n      <ion-spinner *ngIf=\\\"loading\\\"></ion-spinner>\\n      {{\\n        loading ?\\n        \\\"\\\"\\n        :\\n        'تأكيد'\\n      }}\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ActivePhonePage } from './active-phone.page';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ActivePhonePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule.forChild()\n  ],\n  declarations: [ActivePhonePage]\n})\nexport class ActivePhonePageModule {}\n","module.exports = \"ion-title {\\n  text-align: center;\\n}\\n\\nion-header:after, ion-footer:before {\\n  background-image: none;\\n}\\n\\nion-footer {\\n  height: 70px;\\n}\\n\\nion-toolbar {\\n  --background: transparent;\\n}\\n\\n.container {\\n  width: 100%;\\n  height: 100%;\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-box-align: start;\\n          align-items: flex-start;\\n  padding-right: 15px;\\n  -webkit-box-pack: start;\\n          justify-content: flex-start;\\n}\\n\\n.container h1 {\\n  font-size: 20px;\\n}\\n\\n.container .header {\\n  text-align: right;\\n  width: 80%;\\n  font-size: 15px;\\n  color: gray;\\n}\\n\\n.container .title span {\\n  color: var(--ion-color-primary);\\n  text-decoration: underline;\\n}\\n\\n.container ion-item {\\n  width: 70%;\\n  display: block;\\n  margin: 0 auto;\\n}\\n\\n.container ion-input {\\n  --placeholder-color: #c5c5c5;\\n  text-align: center;\\n  font-size: 20px;\\n  --placeholder-opacity: 1;\\n  --placeholder-font-style: normal;\\n  --placeholder-font-weight: normal;\\n  letter-spacing: 15px;\\n}\\n\\n.container .msg {\\n  margin-bottom: 0;\\n  color: var(--ion-color-primary);\\n  text-decoration: underline;\\n}\\n\\n.container .resend {\\n  font-size: 11px;\\n  color: grey;\\n  width: 70%;\\n  display: block;\\n  margin: 0 auto;\\n  text-align: center;\\n}\\n\\n.container .resend-btn {\\n  --background: transparent;\\n  --color: #ff7f26;\\n  --box-shadow: none;\\n}\\n\\n.send-btn {\\n  width: 90%;\\n  height: 60px;\\n  display: block;\\n  margin: 0 auto;\\n  font-size: 18px;\\n  --border-radius: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9naGl6bGFuZS9Eb3dubG9hZHMvcGxhbnRzX2FwcF9hbmRyb2lkL3dvcmxkb2ZwbGFudHMvc3JjL2FwcC9wYWdlcy9hY3RpdmUtcGhvbmUvYWN0aXZlLXBob25lLnBhZ2Uuc2NzcyIsInNyYy9hcHAvcGFnZXMvYWN0aXZlLXBob25lL2FjdGl2ZS1waG9uZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBQTtBQ0NKOztBREVBO0VBQ0ksc0JBQUE7QUNDSjs7QURDQTtFQUNJLFlBQUE7QUNFSjs7QURBQTtFQUNJLHlCQUFBO0FDR0o7O0FEREE7RUFDSSxXQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0VBQUEsYUFBQTtFQUNBLDRCQUFBO0VBQUEsNkJBQUE7VUFBQSxzQkFBQTtFQUNBLHdCQUFBO1VBQUEsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO1VBQUEsMkJBQUE7QUNJSjs7QURISTtFQUNJLGVBQUE7QUNLUjs7QURISTtFQUNJLGlCQUFBO0VBQ0EsVUFBQTtFQUNBLGVBQUE7RUFDQSxXQUFBO0FDS1I7O0FERFE7RUFDSSwrQkFBQTtFQUNBLDBCQUFBO0FDR1o7O0FEQUk7RUFDSSxVQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7QUNFUjs7QURBSTtFQUNJLDRCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esd0JBQUE7RUFDQSxnQ0FBQTtFQUNBLGlDQUFBO0VBQ0Esb0JBQUE7QUNFUjs7QURBSTtFQUNJLGdCQUFBO0VBQ0EsK0JBQUE7RUFDQSwwQkFBQTtBQ0VSOztBREFJO0VBQ0ksZUFBQTtFQUNBLFdBQUE7RUFDQSxVQUFBO0VBQ0EsY0FBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQ0VSOztBRENJO0VBQ0kseUJBQUE7RUFDQSxnQkFBQTtFQUNBLGtCQUFBO0FDQ1I7O0FER0E7RUFDSSxVQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLHFCQUFBO0FDQUoiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9hY3RpdmUtcGhvbmUvYWN0aXZlLXBob25lLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi10aXRsZSB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vIGZvbnQtc2l6ZTogMjVweDtcbn1cbmlvbi1oZWFkZXI6YWZ0ZXIsIGlvbi1mb290ZXI6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xufVxuaW9uLWZvb3RlciB7XG4gICAgaGVpZ2h0OiA3MHB4O1xufVxuaW9uLXRvb2xiYXIge1xuICAgIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG4uY29udGFpbmVyIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGgxIHtcbiAgICAgICAgZm9udC1zaXplOiAyMHB4O1xuICAgIH1cbiAgICAuaGVhZGVyIHtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgIHdpZHRoOiA4MCU7XG4gICAgICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgICAgICAgY29sb3I6IGdyYXk7ICAgIFxuICAgIH1cbiAgICAudGl0bGUge1xuXG4gICAgICAgIHNwYW4ge1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlvbi1pdGVtIHtcbiAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbiAgICBpb24taW5wdXQge1xuICAgICAgICAtLXBsYWNlaG9sZGVyLWNvbG9yOiAjYzVjNWM1O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICAgICAgLS1wbGFjZWhvbGRlci1vcGFjaXR5OiAxO1xuICAgICAgICAtLXBsYWNlaG9sZGVyLWZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgLS1wbGFjZWhvbGRlci1mb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICBsZXR0ZXItc3BhY2luZzogMTVweDtcbiAgICB9XG4gICAgLm1zZyB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAgIH1cbiAgICAucmVzZW5kIHtcbiAgICAgICAgZm9udC1zaXplOiAxMXB4O1xuICAgICAgICBjb2xvcjogZ3JleTtcbiAgICAgICAgd2lkdGg6IDcwJTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgfVxuICAgIFxuICAgIC5yZXNlbmQtYnRuIHtcbiAgICAgICAgLS1iYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICAgICAgLS1jb2xvcjogI2ZmN2YyNjtcbiAgICAgICAgLS1ib3gtc2hhZG93OiBub25lOyAgICBcbiAgICB9XG5cbn1cbi5zZW5kLWJ0biB7XG4gICAgd2lkdGg6IDkwJTtcbiAgICBoZWlnaHQ6IDYwcHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIC0tYm9yZGVyLXJhZGl1czogMTBweDtcbn1cbiIsImlvbi10aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuaW9uLWhlYWRlcjphZnRlciwgaW9uLWZvb3RlcjpiZWZvcmUge1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xufVxuXG5pb24tZm9vdGVyIHtcbiAgaGVpZ2h0OiA3MHB4O1xufVxuXG5pb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAgcGFkZGluZy1yaWdodDogMTVweDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xufVxuLmNvbnRhaW5lciBoMSB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cbi5jb250YWluZXIgLmhlYWRlciB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xuICB3aWR0aDogODAlO1xuICBmb250LXNpemU6IDE1cHg7XG4gIGNvbG9yOiBncmF5O1xufVxuLmNvbnRhaW5lciAudGl0bGUgc3BhbiB7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLmNvbnRhaW5lciBpb24taXRlbSB7XG4gIHdpZHRoOiA3MCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5jb250YWluZXIgaW9uLWlucHV0IHtcbiAgLS1wbGFjZWhvbGRlci1jb2xvcjogI2M1YzVjNTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDIwcHg7XG4gIC0tcGxhY2Vob2xkZXItb3BhY2l0eTogMTtcbiAgLS1wbGFjZWhvbGRlci1mb250LXN0eWxlOiBub3JtYWw7XG4gIC0tcGxhY2Vob2xkZXItZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgbGV0dGVyLXNwYWNpbmc6IDE1cHg7XG59XG4uY29udGFpbmVyIC5tc2cge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi5jb250YWluZXIgLnJlc2VuZCB7XG4gIGZvbnQtc2l6ZTogMTFweDtcbiAgY29sb3I6IGdyZXk7XG4gIHdpZHRoOiA3MCU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDAgYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmNvbnRhaW5lciAucmVzZW5kLWJ0biB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIC0tY29sb3I6ICNmZjdmMjY7XG4gIC0tYm94LXNoYWRvdzogbm9uZTtcbn1cblxuLnNlbmQtYnRuIHtcbiAgd2lkdGg6IDkwJTtcbiAgaGVpZ2h0OiA2MHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgLS1ib3JkZXItcmFkaXVzOiAxMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ConfigService } from '../../services/config.service';\nimport { FetchService } from '../../services/fetch.service';\nimport { NavController, AlertController, Events, LoadingController } from '@ionic/angular';\nimport { HttpHeaders, HttpParams ,HttpClient } from '@angular/common/http';\nimport { OneSignal } from '@ionic-native/onesignal/ngx';\nimport { UtilsService } from 'src/app/services/utils.service';\n\n@Component({\n  selector: 'app-active-phone',\n  templateUrl: './active-phone.page.html',\n  styleUrls: ['./active-phone.page.scss'],\n})\nexport class ActivePhonePage implements OnInit {\n  public inputFocused:boolean = false;\n  public code:string = \"\";\n  public loading:boolean = false;\n  public phone:any;\n  public time:any = 10;\n  public timerText:string = '2:00';\n  public interval:any;\n  link_verify = 'https://slyd4r.com/app/php_code/verify.php'\n  constructor(\n    private config: ConfigService,\n    private fetch:FetchService,\n    private navCtrl:NavController,\n    public http: HttpClient,  \n    private alertCtrl: AlertController,\n    public utils: UtilsService,\n    private oneSignal: OneSignal\n    ) {\n      this.link_verify = fetch.url+'app/php_code/verify.php'\n     }\n\n  ngOnInit() {\n    this.phone = this.config.user.phone;\n    console.log(\"phone was \",this.phone)\n    this.phone = this.phone.substring(1, this.phone.length);\n    this.interval = setInterval(this.timer.bind(this), 1000);\n  }\n\n  public timer() {\n    let numberWithZero = (n) => n > 9 ? n :  '0' +n;\n    this.time -=1;\n    this.timerText = Math.floor(this.time/60) + ':' + numberWithZero(Math.floor(this.time%60));\n    if (this.time == 0) {\n      clearInterval(this.interval);\n    }\n  }\n\n  public log(event) {\n\n    // if (event.target.value)\n    // console.log(event.target.value);\n  }\n\n  public async logOut() {\n    let alert = await this.alertCtrl.create({\n      header: \"رقم الهاتف خاطيء\",\n      message: \"هل أنتِ متأكدة أن رقم الهاتف هذا ليس لكِ؟\",\n      buttons: [\n        {\n          text: \"إلغاء\",\n          role: \"cancle\",\n        },\n        {\n          text: \"نعم\",\n          handler: async ()=> {\n            // let loading = await this.loadingCtrl.create({\n            //   animated: true,\n            //   spinner: 'dots'\n            // })\n            // loading.present();\n            localStorage.setItem('token', \"\");\n            this.navCtrl.navigateRoot('login');\n            this.oneSignal.deleteTag(\"userId\");\n            this.config.user =  [];\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  public activeAccount() {\n    this.loading = true;\n    let headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.config.user.token);\n    let params = new HttpParams().set(\"user_id\", this.config.user.id).set(\"code\", this.code);\n    console.log(\"parms \",params)\n    console.log(\"user id \",params)\n    console.log(\"parms \",params)\n    this.fetch.post('auth/code-v', params, headers)\n    .subscribe(async (data:any)=> {\n      this.loading = false;\n      if (data.success) { \n        this.utils.toastTranslate(\"phone_verified_success\")\n        this.config.user.phone_verified = 1;\n        // this.config.saveUser();\n        this.http.post(this.link_verify , {phone:this.config.user.phone}).subscribe(res=>{\n          console.log('res',res)\n        this.navCtrl.navigateRoot(\"home\");\n\n        },err=>{\n          console.log(\"there was error\")\n        })\n      }\n      else {\n        this.fetch.errorToast('الكود غير صحيح');\n      } \n    },\n    error => {\n      if (error  == 'wrong code' || error == 'invalid code')\n        this.fetch.errorToast('الكود غير صحيح');\n      else\n        this.fetch.errorToast();\n      this.loading = false;\n      // error\n    })\n  }\n\n  public resendCode() {\n    let headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.config.user.token);\n    let params = new HttpParams().set(\"user_id\", this.config.user.id).set(\"phone\", this.phone);\n    this.fetch.post(\"auth/code-resend\", params, headers).subscribe(()=> {\n      this.time = 120;\n      this.interval = setInterval(this.timer.bind(this), 1000);\n    },\n    error => {\n      this.fetch.errorToast();\n    })\n  }\n  \n\n}\n"],"sourceRoot":""}