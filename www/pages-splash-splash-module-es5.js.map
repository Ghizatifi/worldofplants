{"version":3,"sources":["./src/app/pages/splash/splash.page.html","./src/app/pages/splash/splash.module.ts","./src/app/pages/splash/splash.page.scss","./src/app/pages/splash/splash.page.ts","./src/app/services/storage.service.ts"],"names":[],"mappings":"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","file":"pages-splash-splash-module-es5.js","sourcesContent":["module.exports = \"\\n\\n<ion-content>\\n  <img style=\\\"position: absolute;\\n  top: 0;\\n  bottom: 0;left: 0;\\n    right: 0;\\n  width:50%;\\n  margin: auto;\\\" src=\\\"assets/images/logo.png\\\" alt=\\\"\\\">\\n  <img style=\\\"position: fixed;bottom: 0;\\\" src=\\\"assets/images/splash_background.png\\\" alt=\\\"\\\">\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SplashPage } from './splash.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplashPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SplashPage]\n})\nexport class SplashPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NwbGFzaC9zcGxhc2gucGFnZS5zY3NzIn0= */\"","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { FetchService } from 'src/app/services/fetch.service';\nimport { NotificationsService } from 'src/app/services/notifications.service';\nimport { StorageService } from 'src/app/services/storage.service';\nimport { UserService } from 'src/app/services/user.service';\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.page.html',\n  styleUrls: ['./splash.page.scss'],\n})\nexport class SplashPage implements OnInit {\n\n  constructor(\n    public storage: StorageService,\n    public navCtrl:NavController ,\n    private config: ConfigService , \n    private fetch: FetchService ,\n    private userService: UserService , \n    public notificationsService: NotificationsService\n  ) { \n    \n  }\n\n  async ngOnInit() {\n    //get stored language//\n    var lang = localStorage.getItem(\"lang\")\n    this.config.translate.setDefaultLang(lang? lang:'ar')\n\n\n    // when publishin comment this\n    this.checkLogin()\n\n\n    //when publishing remove comment from this\n    //  var isLoggedIn = await this.storage.local.getItem(\"is_logged_in\"); \n    //  if(isLoggedIn) this.checkLogin()\n    //  else\n    // setTimeout(() => {\n    //   if(isLoggedIn) this.navCtrl.navigateRoot(\"tabs/home\")\n    //   else{  \n    //     localStorage.clear();\n    //     this.storage.local.setItem(\"is_logged_in\" , \"true\")\n    //     this.navCtrl.navigateRoot(\"on-boarding\")\n    // }\n    // }, 3000);\n    \n  \n  }\n\n\n  async checkLogin(){\n    // this.config.token =  localStorage.getItem('token');\n    // var user =await localStorage.getItem('user');\n\n    // if (user) {\n    //     this.config.user = JSON.parse(user)\n    //     this.config.is_jordan = true\n    //   this.notificationsService.getNotifications();\n    //   this.navCtrl.navigateRoot('tabs');\n    // }\n    // else {\n    //   this.navCtrl.navigateRoot('login');\n    // }\n\n    \n    \n  }\n\n  async loginWithToken(){\n    \n    let header = new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.config.token);\n    await this.fetch.get('auth/user/account', header)\n    .then((res:any)=> {\n\n      console.log(\"account res \",res)\n      let data\n\n      if(res){\n        data = res.data\n      }else{\n        this.fetch.errorToast()\n        return\n      }\n      this.config.all_user_data = data\n      this.config.user = data\n      localStorage.setItem('user',JSON.stringify(data));\n      this.userService.user =data\n\n      console.log(\"user \",data)\n    },err=>{console.log(\"ERR \",err)})\n      \n    console.log(\"step... \")\n      this.config.token = localStorage.getItem('token');\n\n      let is_jordan :any = localStorage.getItem('is_jordan');\n      console.log(\"SIZ JPTDA \",is_jordan)\n      // make always is jordan\n      this.config.is_jordan = true\n      // if(is_jordan==1 || is_jordan=='1' ){\n      //   console.log(\"JORDAN TRUE\")\n      //   this.config.is_jordan = true\n      // }else{\n      //   console.log(\"JORDAN false\")\n\n      //   this.config.is_jordan = false\n      // }\n     \n\n      this.notificationsService.getNotifications();\n      this.navCtrl.navigateRoot('tabs/home');\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  public local = localStorage\n  constructor(\n   \n  ) { }\n}\n"],"sourceRoot":""}