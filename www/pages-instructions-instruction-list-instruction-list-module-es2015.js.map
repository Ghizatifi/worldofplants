{"version":3,"sources":["./src/app/pages/instructions/instruction-list/instruction-list.page.html","./src/app/pages/instructions/instruction-list/instruction-list.module.ts","./src/app/pages/instructions/instruction-list/instruction-list.page.scss","./src/app/pages/instructions/instruction-list/instruction-list.page.ts"],"names":[],"mappings":"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","file":"pages-instructions-instruction-list-instruction-list-module-es2015.js","sourcesContent":["module.exports = \"<app-header2 [pageName]=\\\"is_plants? 'plants' : 'diseases'\\\"></app-header2>\\n<ion-content padding>\\n<ion-list>\\n  <!-- <div style=\\\"display: flex;align-items: center;\\\" class=\\\"bordered\\\" *ngFor=\\\"let plant of plants\\\"> -->\\n    <ion-row class=\\\"bordered\\\" *ngFor=\\\"let item of list\\\"  (click)=\\\"details(item.id)\\\" style=\\\"margin-top: 10px;\\\">\\n      <ion-col size=\\\"4\\\">\\n        <img-loader *ngIf=\\\"is_plants\\\" useImg  class=\\\"small_img\\\" [src]=\\\"item.image ? fetch.url_storage + item.image : 'assets/images/logo.png'\\\"  ></img-loader>\\n\\n        <img-loader *ngIf=\\\"!is_plants\\\" useImg  class=\\\"small_img\\\" [src]=\\\"item.images && item.images.length>0 ? fetch.url_storage + item.images[0] : 'assets/images/logo.png'\\\"  ></img-loader>\\n\\n      </ion-col>\\n      <ion-col size=\\\"8\\\" style=\\\"display: flex;align-items: center;\\\">\\n        <p style=\\\"margin: 20px;font-size: 18px;font-weight: bold;\\\">\\n         {{config.translate.currentLang!='en'?item.name_ar:item.name_en}}\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n   \\n  <!-- </div> -->\\n</ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InstructionListPage } from './instruction-list.page';\nimport { SharedModule } from 'src/app/modules/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InstructionListPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SharedModule,\n    RouterModule.forChild(routes),\n    TranslateModule.forChild()\n  ],\n  declarations: [InstructionListPage]\n})\nexport class InstructionListPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2luc3RydWN0aW9ucy9pbnN0cnVjdGlvbi1saXN0L2luc3RydWN0aW9uLWxpc3QucGFnZS5zY3NzIn0= */\"","import { HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { ConfigService } from 'src/app/services/config.service';\nimport { FetchService } from 'src/app/services/fetch.service';\n\n@Component({\n  selector: 'app-instruction-list',\n  templateUrl: './instruction-list.page.html',\n  styleUrls: ['./instruction-list.page.scss'],\n})\nexport class InstructionListPage implements OnInit {\n\n\n  loaded = false;\n  route = 'plants_instructions';//\n  list = []\n  is_plants  = false;\n  constructor(\n    private config: ConfigService ,\n    private fetch: FetchService ,\n    private routeA: ActivatedRoute,\n    private navCtrl: NavController\n  ) { \n    \n  }\n\n  async ngOnInit() {\n    await this.routeA.queryParams.subscribe(res=>{\n      console.log(\"res is \",res)\n\n      if(res.is_plants ==true) {\n        console.log(\"plants true\")\n        this.route = \"plants_instructions\"\n        this.is_plants = true\n      }\n      else {\n        console.log(\"plants flase\")\n        this.route = \"diseases\";//disaese list api\n      }\n    })\n\n    this.loadList()\n\n  }\n\n  loadList(){\n    \n    this.loaded = true\n    let headers = new HttpHeaders().set(\"Authorization\", \"Bearer \" + this.config.token);\n    this.fetch.get(this.route, headers)\n    .then((res:any)=> {\n      this.loaded = true\n      this.list = res.data;\n      if(!this.is_plants){\n        this.list.forEach(disease => {\n          disease.images = JSON.parse(disease.images)\n        });\n      }\n\n    }).catch(err=>{\n      console.log(\"there was err \",err)\n    })\n  }\n  details(id){\n      if(this.is_plants)\n    this.navCtrl.navigateForward(['instruction-details'] , {queryParams:{plant_id:id}});\n    else this.navCtrl.navigateForward(['instruction-details'] , {queryParams:{disease_id:id}});\n  }\n\n}\n"],"sourceRoot":""}